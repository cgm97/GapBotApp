name: Deploy to EC2

on:
  push:
    branches:
      - master  # master 브랜치에 push될 때 배포

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. CI 환경 변수 설정
      - name: Set CI environment variable to false
        run: echo "CI=false" >> $GITHUB_ENV  # CI 환경 변수 설정

      # 2. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 3. 전체 커밋 기록 가져오기
      - name: Fetch all commits
        run: git fetch --prune --unshallow

      # 4. 변경된 파일 확인
      - name: Get changed files
        id: changed_files
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $changed_files"
          IFS=$'\n'
          for file in $changed_files; do
            echo "file=$file" >> $GITHUB_ENV
          done

      # 5. 클라이언트 빌드
      - name: Build React app if needed
        if: ${{ contains(env.file, 'client') }}
        working-directory: ./client
        run: |
          npm install
          npm run build

      # 6. 클라이언트 파일 복사
      - name: Copy client build files to production server
        if: ${{ contains(env.file, 'client') }}
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "client/build/*"
          target: "/var/www/loagap/"
          strip_components: 2  # client/build 경로를 제거
      # 7. SSH 키 저장
      - name: Save SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      # 8. 서버 파일 동기화
      - name: Sync server files to production server
        if: ${{ contains(env.file, 'server') }}
        run: |
          rsync -avz --progress \
            -e "ssh -o StrictHostKeyChecking=no -i key.pem" \
            ./server/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/GapBotApp/server/

      # 9. PM2 서버 재시작
      - name: Restart PM2 Server
        if: ${{ contains(env.file, 'server') }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/GapBotApp/server
            pm2 restart GapBotAppServer
          EOF

      # 10. Nginx 재시작
      - name: Restart Nginx
        if: ${{ contains(env.file, 'client') }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo systemctl restart nginx
          EOF
