name: Deploy to EC2

on:
  push:
    branches:
      - master  # master 브랜치에 push될 때 배포

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    
      # 1. CI 환경 변수 설정
      - name: Set CI environment variable to false
        run: echo "CI=false" >> $GITHUB_ENV  # CI 환경 변수 설정

      # 3. 전체 커밋 기록 가져오기  
      - name: ls -al
        run: |
          ls -al ${{ github.workspace }}/client/build  # 빌드 디렉토리 확인
          ls -al /client/build  # 빌드 디렉토리 확인

      # 2. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 3. 전체 커밋 기록 가져오기
      - name: Fetch all commits
        run: |
          git fetch --prune --unshallow  # 모든 커밋 기록을 가져오기

      # 4. 변경된 파일 확인 (Git diff 사용)
      - name: Get changed files
        id: changed_files
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $changed_files"
          
          # 변경된 파일을 각 줄에 대해 처리
          IFS=$'\n'  # 줄 바꿈을 구분자로 설정
          for file in $changed_files; do
            echo "file=$file" >> $GITHUB_ENV  # 각 파일을 환경 변수로 설정
          done

      # 5. 클라이언트 애플리케이션 빌드 (변경된 파일에 React 빌드가 포함되면 실행)
      - name: Build React app if needed
        if: ${{ contains(env.file, 'client') }}  # client 파일이 변경되었으면 빌드 실행
        working-directory: ./client
        run: |
          npm install  # 필요하면 의존성 설치
          npm run build  # React 애플리케이션 빌드

      # 6. 변경된 파일을 EC2 서버로 복사 (서버 관련 파일만)
      - name: Copy server files to production server
        if: ${{ contains(env.file, 'server') }}  # server 파일이 변경되었으면 복사
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            scp -r ${{ github.workspace }}/server/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/GapBotApp/server

      # 7. 클라이언트 파일을 EC2 서버로 복사 (React 빌드 파일만)
      - name: Copy client build files to production server
        if: ${{ contains(env.file, 'client') }}  # client 파일이 변경되었으면 복사
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            scp -r ${{ github.workspace }}/client/build/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/loagap

      # 8. 서버 빌드 및 실행 (서버 파일이 변경된 경우에만 실행)
      - name: Install dependencies and build server
        if: ${{ contains(env.file, 'server') }}  # 서버 파일이 변경되었으면 빌드 실행
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/GapBotApp/server
            pm2 restart GapBotAppServer  # pm2로 서버 재시작
          EOF

      # 9. Nginx 재시작 (React 빌드 후 Nginx에 반영)
      - name: Restart Nginx
        if: ${{ contains(env.file, 'client') }}  # client 파일이 변경된 경우에만 Nginx 재시작
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo systemctl restart nginx  # Nginx 재시작
          EOF
